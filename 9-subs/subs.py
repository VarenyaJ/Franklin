#Problem 9: Finding a Motif in DNA
#Given: Two DNA strings s and t (each of length at most 1 kbp).
#Return: All locations of t as a substring of s.

def sequence_motif (str_s, sub_str_t):
    list = []
    for i in range (0, len(str_s) - len(sub_str_t)):
        a = str_s[i:i+len(sub_str_t)]
        if (a == sub_str_t):
            list.append(i+1)
    return list

print(sequence_motif("ATGAGCAAGTGGCCAGCGCCAGCAAGTAACAGCAAGTCAGCAAGTAAGCAAGTAAGCAAGTGCAGCAAGTAGCAAGTAGCAAGTAGCAAGTTCGGGTAGCAAGTCAGAGCAAGTTTTAGCAAGTGGAGCAAGTAGCAAGTCGGATTAGCAAGTAATATGAACGTTGTCAGCAAGTAGCAAGTGCGAGATGTTAGCAAGTGGAAGCAAGTAGCAAGTTAGCAAGTGTGTAGCAAGTTGGTGAAGCAAGTTTACTAGCAAGTTTAGCAAGTAGCAAGTCAGCAAGTAGCAAGTGTTTCAAGCAAGTGAGCAAGTTAGCAAGTGAGCAAGTGAGCAAGTTCCAGGAGCAAGTAAGCAAGTAGCAAGTCACGGAAACCAGCAAGTAGCAAGTAGATCAGCAAGTCTGAGCAAGTCAGCAAGTAAGAGCAAGTCTAGCAAGTTAAGCAAGTGCTGACAGCAAAATCAGCAAGTACTTAGCAAGTACAGCAAGTACAAGACAAGCAAGTTAAGCAAGTAAACAGCAAGTTCGAGCAAGTAGCAAGTAGCAAGTAGCAAGTGTCAAGCAAGTCAGCAAGTTGCAGCAAGTGATAGCAAGTTCCAGCAAGTAGCAAGTAGCAAGTTAGCAAGTTAAGCAAGTAAATGCTACGGAGCAAGTAGCAAGTAGCAAGTAGTAGCAAGTCGGACATGTACAAAGCGCTCAGCAAGTAAGCAAGTAGCAAGTGTAGCAAGTATTAAAGCAAGTCCAAGCAAGTAGCAAGTGAGCAAGTTGAGCAAGTAGCAAGTCGTCGCGTGGCTGAGTAGCAAGTAGCAAGTAGCAAGTTCTCAGCAAGT", "AGCAAGTAG"))
