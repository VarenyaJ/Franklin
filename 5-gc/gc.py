import re

f=open("5-gc/rosalind_gc (1).txt","r")


lines = f.readlines()
name=[]
score=[]
seq=[]
temp=[]
lengthlines = len(lines)-1

for line in lines:
    if re.match(">",line):
        name.append(line.replace(">",""))
        if temp :
            seq.append("".join(temp))
            temp=[]

    else:
        if lines[lengthlines]==line:
            temp.append(line)
            seq.append("".join(temp))
        else :
            temp.append(line)

for i in range(0,len(seq)):
    length = len(seq[i]) - seq[i].count("\n")
    score.append((seq[i].count("C")+seq[i].count("G"))/length*100)


maxvalue = score.index(max(score))
print(name[maxvalue])
print(round(score[maxvalue],6))
f.close()


'''
#Problem 5: Computing GC Content
#Given: At most 10 DNA strings in FASTA format (of length at most 1 kbp each).
#Return: The ID of the string having the highest GC-content, followed by the GC-content of that string. Rosalind allows for a default error of 0.001 in all decimal answers unless otherwise stated; please see the note on absolute error below.

n = ["CTCTTCGCGTGTCTCAACTGCATCCAGTATAACTCAGCGCACTAACGAGGACTGACGATGGGACTTCTATACACCGAACTCTACCGGACGCTATCGGAAACCCTGGGCGTGACCGTTGTATGGCCAGTACCGCGGCACGGACTATTAGGCCTGCTCAAACGATCTCAGGCTAGTGCCACGGCTCGGATTTGAAGGGGGGCACGGATGGCTGTGGAACCCGATTGTTTAAGTAGCAGTCAAACGATCCGAAGTAGTCTGGAGGTTTCGAGCCGAGCTGCCCGGCAATGTTTACCCCTGACTGAGGTCCATTACTGATTCGAGTTTGTGCATTGCCTGGTTTGATGGGGACGGCGGGCCTAATTGGATGACTTTCAGTCTAAGACCATCTTAATGGCAAGAATGAGTCCCCGATCCAAACACCGCCAGTGCTGAGCATCTCGCTCCGTTGGAAGTAGTGAACACTCAGCACTATCAGTTGATATTCGGTCGCACAGCGTGGCAATTCCTTCCTTTCCACGTAACTAGTTTATCGAGGGACTGCCGGATGGCCATTCGATGCTCTCCTCAAGTCCTGTCTAGTACTCGAGGGCGCTCCGCCCAAGATTATTTCCTATTATTGAGTTTCCGTTTGCCGGGGGACACTAGGCGAGATTCCGCTTGTTTAGCGATTTATGCAGCGTCATCTTGGTGTTGTGCTAAGCTAGTGTATAGAATCATATTAATAAAATATGGGTGGGGACTAGCCTGGTCTTTACTTCAATTCCCCTGGTATGTAAAGTCGACGTCGGCCCCGGAGTAATAGGAGTGTCACACCGATAGTCGGTAATTATGTGGACCTGAGATCATGCCATTGATCACCTATGTTATTACTCTGGTTTAAGTATCGCCGCGGCGTTGGTT", "ACCCGGTGATTCTAGAGCAAACCCCACATCATCAAGGACGGGCCTTGGTTCGAACCGTTCCATCCTTGTCAGGGCCGGCCATTTTCCCCCAAGCTCAAAACGGGATAGACACCTCTGTAAGACTATTTGGAATCCGACACGGCCCGAAATATAACATTTGAGCATACCGGATTGTGGTTGCAATCATCAGGGCGCTTCCGTGAGAGTACAGCTTAGAAATCTTGAATCGTCTTTCACTTAGTCCTATCTATGCATGTCTCTTCGACAACATTAGATTTATGAACACCTGCAACTTATACAGACAAGCAATTATCTCACGGACGGTTGATTGCGTCTAGTATAATCACGTGTCTCGCAGAGCATCTGGCTTCCGAGGAGTGTCGTGAAGCGCTACTAAAGGTACCCGTGCGATTGTACATAAGCTTCTGGTTGGGCGTGTGGTTTACGACTGAGCCACCCCCATCAACTATGATAGCGTTCCCTTGTGGCGCCATGGCCATTATCCTACTGTTTATAGGGGTGGCTGCCCATGTTTCCGGGCAGGAATAACAGTAAAACCGGATTTCGATCCGCGGGCGCCCCCAAAACCGCCTCCTCTTTCGCGAACTATAGCAGCTACAGGAAAAGAGAAATCTATAGTCCGGACGGCTAGCTCTTATGCGGAGGGGAATCGTTCTCACAAGTGACAGACTTCTTACACGGAGAATGTCCGTGCAATCCCATATTTTGGCTTTGCTCTCATAGGGTTGAGTCAATAGCTGGATACCGGATGCGACAACGGCGAAGACAGAGTAACAGAGATCATCTGCAGAATAGCCGCGGTGGTAAGAGACAGACACCG", "CTTGCGAGCGGGCCATAGTACTTGATCTTACCGGCTGACACTATCACACGCGGGTTGGCACGTACGGTGGATTTTCGAGGAGTCCAGTCTCGGAACCGGTGGAGACAATTTCGATTCCAACCCATCCTCCCCTGTAGAAGATTGATTCGGCTAATCTCCGCGCATTCGATGATATCAATTGACATGTAAACAAGGCCTTGAAGTGTATCCTACAACGGTGATCTATGTGGTCTTCTGCTCGTTGTAGGAAGCTCTCGGTACTTGCCGGCGACCATAATTAAGCAGGAATCATAATCGAATCTTATGTTCCCCAGAGCGGTCACCGACGAGTTCACGTCGGCTGCGCTGGTATACTTAAAATTAAGCTCGGTGTCGCATTCTATAGCCATCAATGTACAGACTGTCTTACCAACAGTAACAGTACACTGTTCTATCATAGTCCGCGTCAACGTCAAGATCCTAGAGCGGCGATTTACCGCCCGGAGTTTCAGAGTTGCTTTAAAGGTGAACAGAGGGTGTACCCTTGCTCCTAATACACACCACACGGTAGTGTGTAAGTATCGGACATGAAACTCCCTAATATCACAGATACTGTCTTGGGTAACCATACCCAACACTCCGGAGGTTAACAAGCTCCGCACCTAGGCTATACATGGTAACCGAATTTCTGAACTAGGAGGGAAGATACGAGCAAATAACTGGGGGGCACGATGACCCGAGCGAGACCTATTCGACAGTTCTGGCTAAAGACGGGCCAGACGGGGCGGTAATCCTGCCGACCCTACCGTCGCGAACCTACACGTGTCGACCCTAAACCACGCACAATTGTG", "TCTAGGTGTATGGGTACAATGGGAGGAAGTTCGCTGCCGTACCAGCTTCCACTCTACATGTTAAATCTGTGTTAAAGGCCGCCGTCGAGGCACAGTCATGCACTTGCAAGTGGACGTAATGGGGTTGCTGGAACCTGACTTGCAATACGTGGAATAAGATTTAGGTAGGTGTGGTGCAGGAAATCGTGACCAGTGGGGTCTCTCGTGCCAGTGATTGCGCTTCGCAATTGAAAAGCAGTGACTTCAGGATCCTCGGGGGAGGTCAACTGAAAGGAGGCTCATTGCCGCTCCCGTATTTTCACACCTGATAACGCGGCGGTTGGCAGCCTCACCTGTAGACGGCGCATTGGTCCCTGAAACTAGTATTGTTGTTCCCAACTTGTCATATCATCGACAATTGCGCGTTATCCCTGCCTCGGGGAGCCGTAAGCAAACGTTGGCCGTTTTTCAAGCGATTACCTTAACAATCGAGTCCTGCACCTCTTTTCGATGAAGGAGCGAGACCAATCAACTCATCCGAGGTTTTTGCATATATCAAGCATTGATAGTAGAAGCCCCTATGATATTGCCGAAAAATAGGCGGAGAGCTCGCCGTGGATATATTCCCCGATTTTAATTACTTTTATACGTATTTAGTTGTTAACAAGTCTTCAGGCTTAGAGGGACACTGGTTCTCGGCGCGTTACATCATTTAATCTTGGGCCGCACGGCGCTTTCCCCGCTCTAATTGGGGCTGAACGGGGTATCTGAAGAAGCTTCTATGTAAGAATGGGCTAAGGATATAAGATAGACACGAGTCCATTAAGTCTATTCTGTATCAATGTAGCATAATCGCGGACATGTATCAACTTACACTTATCAAACGGTAGGCATCCCGCACTCCATCCTCTCGAGGATCAAAGTAGTAGTACTGGTGGTGGTTGACACGTGGATAATGAATGGAGGGGCGACCCAGGGCTGCTTAGCAACGGTCCTGGGCTACCC", "TTGTTGATGGGACGTGCGGGTTTTATGAAAATTCACAGTGGGCCGCGCGCTGACCGCCCCGTGGCTCTATCCTTGGGTAGCCTCCAACTTCGTTTGAGATATGGGCCCGTCGATCGGGTATGTGTGTGCCACGTCAGAACTGAAGGCCTCATCCTGCCCCCCTCTTGGGGTGGCGTTCCCACAAGATAGGATGACAACTGCCCAGCAATCATGGTTGGCTTGACAATATCCCCCCCCTCTCTTTATTTCAGTAACGCGCGGGACCACACTTGGTGATTCCTGGCTCTCTTCCGAACCTCCAGATTCATCTGATAGCCGGAGGAAGCGCGGTCCGTGGATCAACGGGCGCGCGGTAGTTGGATATCTGATGGAAATTATCTGTCGGCCATCGATCAGAAGGCCCTATGGACCTCGTAAGGGTCCTAATGAACTGACACTGCTTGGTTCGCTCCGATGCACGTTGTCCTAGCACCAGGCGGGGAGTAAGAGATTGTTAGGGTATTAGCTTAAGATGCCGTCCTGTGCGAACACGGCTGGACTAGATCCCCGCGCCTCGAGGGTGTCAAGGCCCGTAAGGAACTGGACACGACAGGCATTTTATTAAGCGTGGTATGACAGGGGGATGCATAACCCCCCCTGAGGCATTGCGGCGCATGTGTAGCCTTAATGTTGCCATTAGCCCGCTCGGTCCCCATGGCCTTCCGGTTTCCTATAATTGTATGAGATATGAGTGTACCTGCTTTGTGTCGGACACTTCTACGTGTAGATTACACCCAGCCGATGCGCATGTCAGGGCGTTAATGGCACGGCGGTATATACATGACGTGCTACTAGAAATACCGCCTCTTTGGGGCATTTATGGCGCCAGCTTTGGTTACTATGTTACATCATCACGATATTCGAGTGTAATGGGTCCCTGGGCAATTTCGTTACAGCATTGGATAGTTCAGTGACGTACTATGCGGGT", "GACGGATGGATACAGCAGTTTACTTACAAACATCGACTTTCTACTCGATTCCCAGTAGCAGTATTAGCCGTTGACTACATCGATGGCGTTATGTTAAATTAGGTCTCGAAAATGGTGATTAGCGTGAGCCTCTTCTGACAACAGTAACTCGTCATTCGATTCTGCCAGCGCGAGCTGGAATTGGAACCTATGTTCTAACTAGGGCAGACGCTTGTATTCTGCTGCACCATAACAAATACACGATCTTGTGCGTTACCCCCAAGTCTCGAGACCTTCGGTCTGGGTTAGTCATGTGAACTGTATGTGTTCGCTTGGTCGCTCTAGCCCTCCAGCCCGGGGGAGCTGGCTCGCTTGTCGTCTTCCCAGCCACTCGCCAAAACTCGGACAGAGGATCCTAAGGTAGTCCTATGATGATATCAAAAGTCAGGATCAGTCAAGTGTGGGGTGTGGGTTTTATCACACACATGTACGGATGCGTTTGTCGCGGTCTGCCTAGGTCGGCTGCAAACCATGTGCCGGCCAACTACGGAAACAATTGCGTACTGAGTGCCAGGCTGCATTGTATACCGCTTTGTAATGTGTCCCGACGCTATAAAACGTACGCAAAATTCTATACTAGCGCATAGCCCTAACGAATGAGGACAATTCATCTTACCTTATGGATTATCTGAAAATCCACGTTGCGGCAATTTTGGTGTGCTCGTAGTCTCTAGGCATGGCTCAACTTCATGCGATACCGCTCAACGCGTCATTCAACGCTGTGGTTCACCCAGCGTTCATGCTGCCCACGCTACGGGGGTGGGGCAGCACCTCTCTAAGAGGCCACTTGGTCGTCGTATCAGTGCGCACCGTGGAGCCACCCGTCAGAGCTTCCCCAGTGACACC", "GGTCGAAGACCGTTGGGTAAGGACCGACCGGTACGATGGGCAAGTATATCCGCATATAAAGGAATTCTGCTCACGTCGATCAATGTGGTGAGCCGTGAAGAGGTCTCTGAAGTAATCGAGGACCGGCGCTGGATGAAAGGCTGCATTGATGTCTCCGGTCGGGGCAGCAACCGTTAACTCTGCTTACGGTGAGCATGGATCTCATATTCATTTTTGCAAGCGAAGTTTGCGGATATTAGCAGTTTAAATTGTTCGACTAAAAGCTCGCGGTTTCAAAATCTCAGGCATGTAGATTTCTTCTATCGCCCCGTATCAACTTACTGAAGCGAAACTCTATTAAACACTGTTCTACTATCAGATTCTCGGTCGCCCTAACATTCGCCAACCGATATGTATGTAGATGCCCGACTCCGCATCGTGCGCTACCTGCCATGTACTCTTTGGGGTCGGACGTCCTACCTCGAGATTGAGGTTACCGGCACATCCAGACACACCCACAGGCTGGATCAGCGGGTTTCCACTGTTACTCCTCGCAAAACCACCATTGCCTGGACATTGGGACGGAGTAGCATTGAAGCCAAAAGCATGATCAGACGATTGTGCAGACTGCTACGCGGATGTTCCTTGAAAACGCTGGCGCGATGCTTAGTAACCGTGTGTGTAGTGCGGAATTGGATCGTAGGTACGAAGGCACAATATGGCCAAACCAGGCCGATTTGCATAAGAGAGCCACTGTTACCTCCTGTCTTTCTCGGGGGTGAGTTCTGTGGAGAGGGATGCTACTGTTCAACACGAGCGGGTGAGGCGAGTTTAGACGTGATGCTACTACGGCCCATGCTCATCGATTAAGACAGTAATGAATATGAGGTGCAACCAGACAGATCCCGCTCAGGCCCCTGGCTTTAAGAGTAGAGGGTGACGGCGACCTCTAGTCGAAACCAGACTGAACCGACGGCTTGAATAGGCTTGGGAAAAAAGCGATCCACC", "TGTTCGCTGTTCAGGACCGCTGTCACCGCGAGCCCCGTCCAGGGCGGGTCAGATCACGGTTTCCTTTGTGGTCCCCTAGTTTGCTTCAGTACTTTTCTGACCTACTCAAAACCCTGCTTTGCGCTGCTCATACAGTCTATTGCGAATTCACCTCGTTTATGTAGGTGTACGAGATGCTACTGTATAGCCGATGCGTGTGATTCACACACACCATGTGCGGTAGGGCGACGTACATTTGATTGATTGGATCATAGACGGCACGGCTTAATGTAATTGGTTGCAAGAAGGGCGGCCAAATTGCGGGAGAGATTTGCGGGGGCAGTGGACCTCCGTCGTTGTAAACGGTCTTCCCGGAAATGCGACGCTGAGGTTGGTAACATCGGTAGATTGAAACCCTCGTTATCCCCTTGAAGCTTTAATTAGGCAGGCCATGACGTCCTGGACACTTGGTTGATGCAAAAGTATGTCAGTGCCCATGAACTAATCCTAAAGGTCAGTCTGGTCGCTACAAGGAGGCTGGTAGGGAGCGTTCGGAGCGAAATTATCGCCCCCTACCCTGTCAGGAAGTACGTCCCCCGTGGCCGAACAAGGGCTGCGGTAGAAAACGCCCAGAGTTCCAAGATGTCACATCCAGTATACTTTCCAGCACGGCGATTTTCAGTGAGGAGACACCAGGCAGAACATAAGGATTCAAGCCCAAGCATAGCTCCGTTTTAGAAATTAGGACGCCTCAGAAGGCGTTCACCGAAGATAGACGGCAGGCAAGGTTACCTCTTCACCTTAATTTACGAGTTAACTAGCCTAAATGTTAGGAGTAATCGGATTCAATCATATTACATAACTTGGCCACCGATCTC", "ATTGACAGACACAAGCGAACTATGTCAATTGCGGACTACGGTTATATACGGAGGATAGGCCTAGACGCGGAAGCCGGTAGTTTTATCGGGGGAAATTCTCGATTCGTCCCTTAGGTGACGTACAAGTGAGCCAGCTCGAGTGGATACAGACTTGTTCACTGATAAGCCATAGGGTCCTCGGTTGTTATGCTATGAACACGTGACATTGGGCTCTGAAGGGTACGTGAGTTGTGGGATATTTCGTCCGCCGCGTATCGAGGCGCTCCCCCGCGGTCGACTCGAGTAGGATCCGCTCGAGGACAACCATGGGTGCATGATCCGGACGTGGGGTTTCACGGGAGTCGTTATGCTAAACAACTGATATTAGAATGGATGCCAGAAGAAGCTCCAGTACGAGGGATCTACTATCCTGGTCTGTGGGTAAGAGTAACTACCACACGGTTTGTAGTGGATATGGCATTAATTGAGAAGATCGCCTGATTTACATCGAATTGCTAACAAGTGTCTCACCGAAGAGACGACTCAGCCACCTTTTATCCCGGCATTAGATTTGGCGACAATTTCTCACGAGTCCACTCGACTGTTTGTCAAGAGGCAGCTTTATTATTTGAGTGCGCCTTAACAACCCCAGCTCGGGTGCGCTACCATCGGACTCCGATTATGTACAGATGACGACTGATTTACCTTGACTGGACTTTATCCCCCGCTTCCATACACACCCGGGGTAACATCGTCACCGATTTATTGGGACTGCTGGATCTGACAAAACCTTCGAGTATCTCGTTATTTGGGTAATGTACCCGCACCCTCTATTCACAATTAGCTACGCCTACATCTCGTATGAGGTCTATTGCCAAACTTTCTAGTCAAGTATAAACGCAATTTGCCACAGTTTTTTCACTCG", "ACAACAGAGACGCTCGTCCCGTACGCACTTTCTCAGCTTAACTTTATGTATTTGTGCAGCAAACGATACGTGCTTATCTCAGTTCGACGAAGGTAGCCCCAATGATAGGGCCCCAGATGTACCAACGCAGTTTTACTCATTCTGAACCAGCGTATTAATATCCTGTGTAGGGATGGTACATTATTCGGGTACAATGGGTCGAGTCTGTGGGCAAGTCTTAAAATACCTCAGACCAGGTAGTCAAGTACTCAAGAGGACAACCTAGTGATAAGCCGTCGAGTTCGGAGTTCTTAGAACCTAAACATTAGATTAACGCCAGGCCGTTTGCCCCCCAGGTGGGCGGGTGGAGATACTTACTCAATAGAGTGTGTGCCCCTAGGTGTACAGCACATAATCACCCCGTCTGGTAACTCTCCGATACGGCCCACGCGCCAGCCCGCCGTTCGTCGGTATATTCACCCCCAACGAAAGATTCTGCTGGTATATTGGTCCATCGTAGCACCTCCATCCGCAGTAAGTCGCCCACTCGGGGCATATGCCAGGCGGACCCGATGTGTTGGTAGCGATGTCCCATTGAATCAGCCATTAGCTACGGACAAGGGCCGAAACCCATCTGTCGATTTTGAACGACGCTTTAGGGCTTAGATAGAGCACGCCCCCATTCTTATTGTTTAATAAGCAGATTTGATGCAGAGAGAAGCCCCACACCACTAATTCAACCTGTCTTTACCTCCGCGAACGCCCGAACGCTTTGAAGCGGTTTTTCGAAGTGAGATTTTAACCCAGCTCTCTGGAAAGAGTCAAAAGGTGCATCTCGGGGTCATATAGCCGTCGAGGGGCAGGAAATCGATCTGATTGTCAAGTAGATGGATTCGGCAGGTGTTGCCGACGTTCCGCTCCGTTCGTCTACAATCCAACTCATC"]
m = []
def gcContent(n):
    for i in n:
        count = 0
        for j in range(0, len(i)):
            if (i[j] == 'C' or i[j] == 'G'):
                count = count + 1
        l = count/len(i)
        m.append(l)
    large = 0
    for k in m:
        if (k > large):
            large = k
    return large*100
print("\n")
print(gcContent(n))
'''